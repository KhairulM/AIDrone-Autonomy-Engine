"""
  Generated by Eclipse Cyclone DDS idlc Python Backend
  Cyclone DDS IDL version: v0.9.1
  Module: 
  IDL file: fms_interface.idl

"""

from enum import auto
from typing import TYPE_CHECKING, Optional
from dataclasses import dataclass

import cyclonedds.idl as idl
import cyclonedds.idl.annotations as annotate
import cyclonedds.idl.types as types

if TYPE_CHECKING:
    import BatteryStatus
    import DirectorState
    import DroneCommand
    import DroneState
    import LocalPosition


@dataclass
@annotate.final
@annotate.autoid("sequential")
class LocalPosition(idl.IdlStruct, typename="LocalPosition"):
    x: types.float64
    y: types.float64
    z: types.float64


@dataclass
@annotate.final
@annotate.autoid("sequential")
class BatteryStatus(idl.IdlStruct, typename="BatteryStatus"):
    percentage: types.float32
    temperature: types.float32
    charge: types.float32
    capacity: types.float32
    state: str
    health: str


class DroneState(idl.IdlEnum, typename="DroneState", default="UNKNOWN"):
    UNKNOWN = auto()
    CHARGING = auto()
    IDLE = auto()
    RUNNING = auto()
    EMERGENCY = auto()


class DirectorState(idl.IdlEnum, typename="DirectorState", default="INITIALIZING"):
    INITIALIZING = auto()
    READY = auto()
    STARTING = auto()
    EXECUTING = auto()
    PAUSING = auto()
    FINISH = auto()
    RETURNING_TO_HOME = auto()


@dataclass
@annotate.final
@annotate.autoid("sequential")
class DroneStatus(idl.IdlStruct, typename="DroneStatus"):
    id: str
    annotate.key("id")
    name: str
    model: str
    current_mission_id: str
    current_task_index: str
    flight_mode: str
    position: LocalPosition
    drone_state: DroneState
    director_state: DirectorState
    battery_state: BatteryStatus


class DroneCommand(idl.IdlEnum, typename="DroneCommand", default="START"):
    START = auto()
    PAUSE = auto()
    RESUME = auto()
    RESTART = auto()
    SHUTDOWN = auto()
    RTH = auto()


@dataclass
@annotate.final
@annotate.autoid("sequential")
class DroneCommandRequest(idl.IdlStruct, typename="DroneCommandRequest"):
    drone_id: str
    annotate.key("drone_id")
    corr_id: types.int32
    annotate.key("corr_id")
    command: DroneCommand


@dataclass
@annotate.final
@annotate.autoid("sequential")
class DroneCommandReply(idl.IdlStruct, typename="DroneCommandReply"):
    drone_id: str
    annotate.key("drone_id")
    corr_id: types.int32
    annotate.key("corr_id")
    result: types.int32
